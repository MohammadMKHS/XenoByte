@model CheckEthereumWalletReputationModel

@{
    ViewData["Title"] = "Ethereum Wallet Reputation Report";

    string Safe(string s) => string.IsNullOrWhiteSpace(s) ? "N/A" : s;
    string RiskClass(string level)
    {
        if (string.IsNullOrWhiteSpace(level)) return "risk-low";
        var low = level.Trim().ToLowerInvariant();
        if (low.Contains("high") || low.Contains("critical"))
            return "risk-high";
        if (low.Contains("medium") || low.Contains("moderate"))
            return "risk-medium";
        return "risk-low";
    }

    string SeverityClass(string severity)
    {
        if (string.IsNullOrWhiteSpace(severity)) return "severity-low";
        var low = severity.Trim().ToLowerInvariant();
        if (low.Contains("high") || low.Contains("critical"))
            return "severity-high";
        if (low.Contains("medium") || low.Contains("moderate"))
            return "severity-medium";
        return "severity-low";
    }

    string JoinList(IEnumerable<string> items) => (items == null || !items.Any()) ? "—" : string.Join(", ", items);
}

<link rel="stylesheet" href="~/css/wallet-forensic-report.css" />

<div class="content-section">
    <!-- Header -->
    <h2>Ethereum Wallet Reputation Report</h2>
    <p><strong>Wallet Address:</strong> @Safe(Model?.wallet_address)</p>
    <p><strong>Status:</strong> @Safe(Model?.status)</p>
    <p>
        <strong>Reputation Score:</strong> 
        <span class="@RiskClass(Model?.risk_level)">@Safe(Model?.reputation_score)</span>
    </p>
    <p>
        <strong>Risk Level:</strong> 
        <span class="@RiskClass(Model?.risk_level)">@Safe(Model?.risk_level)</span>
    </p>

    <!-- Wallet Basic Information -->
    <h3>Wallet Basic Information</h3>
    @if (Model?.wallet_basic_info != null)
    {
        <div class="section-content">
            <table>
                <thead>
                    <tr>
                        <th>Field</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td><strong>Address</strong></td><td>@Safe(Model.wallet_basic_info.address)</td></tr>
                    <tr><td><strong>Balance (ETH)</strong></td><td>@Safe(Model.wallet_basic_info.balance_eth)</td></tr>
                    <tr><td><strong>Balance (USD)</strong></td><td>@Safe(Model.wallet_basic_info.balance_usd)</td></tr>
                    <tr><td><strong>Transaction Count</strong></td><td>@(Model.wallet_basic_info.transaction_count)</td></tr>
                    <tr><td><strong>Creation Date</strong></td><td>@Safe(Model.wallet_basic_info.creation_date)</td></tr>
                    <tr><td><strong>Last Activity</strong></td><td>@Safe(Model.wallet_basic_info.last_activity)</td></tr>
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="section-content"><p><em>No wallet information available.</em></p></div>
    }

    <!-- Reputation Flags -->
    <h3>Reputation Flags (@(Model?.reputation_flags?.Count ?? 0))</h3>
    @if (Model?.reputation_flags?.Any() == true)
    {
        <div class="section-content">
            @foreach (var flag in Model.reputation_flags)
            {
                <div class="reputation-flag-item">
                    <h4><span class="@SeverityClass(flag.severity)">@Safe(flag.flag_type)</span></h4>
                    <p><strong>Description:</strong> @Safe(flag.description)</p>
                    <p><strong>Severity:</strong> <span class="@SeverityClass(flag.severity)">@Safe(flag.severity)</span></p>
                    <p><strong>Source:</strong> @Safe(flag.source)</p>
                    <p><strong>Date Flagged:</strong> @Safe(flag.date_flagged)</p>
                </div>
            }
        </div>
    }
    else
    {
        <div class="section-content"><p><em>No reputation flags found.</em></p></div>
    }

    <!-- Known Associations -->
    <h3>Known Associations (@(Model?.known_associations?.Count ?? 0))</h3>
    @if (Model?.known_associations?.Any() == true)
    {
        <div class="section-content">
            <table>
                <thead>
                    <tr>
                        <th>Entity Name</th>
                        <th>Type</th>
                        <th>Association</th>
                        <th>Confidence</th>
                        <th>Last Interaction</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var association in Model.known_associations)
                    {
                        <tr>
                            <td>@Safe(association.entity_name)</td>
                            <td>@Safe(association.entity_type)</td>
                            <td>@Safe(association.association_type)</td>
                            <td>@Safe(association.confidence_level)</td>
                            <td>@Safe(association.last_interaction)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="section-content"><p><em>No known associations found.</em></p></div>
    }

    <!-- Transaction Profile -->
    <h3>Transaction Profile</h3>
    @if (Model?.transaction_profile != null)
    {
        <div class="section-content">
            <table>
                <thead>
                    <tr>
                        <th>Metric</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td><strong>Average Transaction Value</strong></td><td>@Safe(Model.transaction_profile.average_transaction_value)</td></tr>
                    <tr><td><strong>Total Volume (ETH)</strong></td><td>@Safe(Model.transaction_profile.total_volume_eth)</td></tr>
                    <tr><td><strong>Total Volume (USD)</strong></td><td>@Safe(Model.transaction_profile.total_volume_usd)</td></tr>
                    <tr><td><strong>Incoming Transactions</strong></td><td>@(Model.transaction_profile.incoming_transactions)</td></tr>
                    <tr><td><strong>Outgoing Transactions</strong></td><td>@(Model.transaction_profile.outgoing_transactions)</td></tr>
                    <tr><td><strong>Frequent Counterparties</strong></td><td>@JoinList(Model.transaction_profile.frequent_counterparties)</td></tr>
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="section-content"><p><em>No transaction profile available.</em></p></div>
    }

    <!-- Security Alerts -->
    <h3>Security Alerts (@(Model?.security_alerts?.Count ?? 0))</h3>
    @if (Model?.security_alerts?.Any() == true)
    {
        <div class="section-content">
            @foreach (var alert in Model.security_alerts)
            {
                <div class="security-alert-item">
                    <h4><span class="@SeverityClass(alert.severity)">@Safe(alert.alert_type)</span></h4>
                    <p><strong>Message:</strong> @Safe(alert.message)</p>
                    <p><strong>Severity:</strong> <span class="@SeverityClass(alert.severity)">@Safe(alert.severity)</span></p>
                    <p><strong>Timestamp:</strong> @Safe(alert.timestamp)</p>
                    @if (alert.related_addresses?.Any() == true)
                    {
                        <p><strong>Related Addresses:</strong> @JoinList(alert.related_addresses)</p>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <div class="section-content"><p><em>No security alerts found.</em></p></div>
    }

    <!-- Disclaimer -->
    @if (!string.IsNullOrWhiteSpace(Model?.disclaimer))
    {
        <div class="alert alert-info mt-4">
            <strong>Disclaimer:</strong> @Model.disclaimer
        </div>
    }

    <!-- Action Buttons -->
    <div class="section-content mt-4">
        <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
            <i class="fas fa-home"></i> Back to Dashboard
        </a>
        <button onclick="checkAnotherWallet()" class="btn btn-secondary ms-2">
            <i class="fas fa-shield-alt"></i> Check Another Wallet
        </button>
    </div>
</div>

<script>
function checkAnotherWallet() {
    // Trigger the wallet reputation modal again
    const event = { target: { value: "10" } };
    callXenoByteAPIs(event.target);
}
</script>